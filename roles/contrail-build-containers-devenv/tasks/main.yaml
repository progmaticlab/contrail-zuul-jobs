---

- name: check packaging
  debug:
    var: packaging

- name: prepare config directory
  file:
    path: "{{ devenv_dir }}/config/etc"
    state: directory
    recurse: true

- name: copy repository files
  become: yes
  shell: "if [ -e {{ item }} ]; then cp -fR {{ item }} {{ devenv_dir }}/config{{ item }} ; fi"
  with_items:
    - /etc/pip.conf
    - /etc/yum.repos.d
    - /etc/yum.conf

# TODO: try to commonize it with yum-prepare-repos
# this file is needed because of container-builder. it builds
# containers using just templates in its folder.
- name: prepare tpc.repo.template for contaniers build inside devenv
  template:
    src: tpc.repo.template.j2
    dest: "{{ devenv_dir }}/tpc.repo.template"

- name: prepare google-chrome.repo for test contanier build inside devenv
  template:
    src: google-chrome.repo.j2
    dest: "{{ test_dir }}/docker/base/google-chrome.repo"

- name: Prepare build configuration - {{ item }}.tmpl
  template:
    src: common.env.j2
    dest: "{{ devenv_dir }}/common.env.tmpl"

- name: Build containers
  shell: "./startup.sh \"configure,compile,package\""
  become: true
  args:
    chdir: "{{ devenv_dir }}"
  environment:
    DEBUG: "true"
    IMAGE: "{{ devenv_image_name }}"
    DEVENVTAG: "{{ devenv_image_tag }}"
    CONTRAIL_BUILD_FROM_SOURCE: 1
    CONTRAIL_CONTAINER_TAG: "{{ containers_tag }}"
    OPENSTACK_VERSIONS: "ocata,queens,rocky"
    CONTRAIL_DIR: "{{ ansible_env.HOME }}/{{ packaging.target_dir }}"
    REGISTRY_IP: "{{ contrail_docker_registry.split(':')[0] }}"
    REGISTRY_PORT: "{{ contrail_docker_registry.split(':')[1] }}"
    SITE_MIRROR: "http://{{ zuul_site_mirror_fqdn }}/repository"
  tags:
    - skip_ansible_lint

- name: Push devenv docker image
  command: "docker push {{ devenv_image_name }}:{{ devenv_image_tag }}"
  become: true
